<File buildtool.mk>
        Server = localrepo
		Revision = HEAD
        Directory = openssh
</File>

<File openssh-5.8p1.tar.gz>
    Server = localrepo
	Revision = HEAD
	Directory = openssh
	envname = OPENSSH_SOURCE		
</File>

<File openssh.patch>
    Server = localrepo
	Revision = HEAD
	Directory = openssh
	envname = OPENSSH_PATCH1
</File>


<File sshd>
        Server = localrepo
		Revision = HEAD
        Directory = openssh
</File>

<File sshd_config>
        Server = localrepo
		Revision = HEAD
        Directory = openssh
</File>

<File ssh_config>
        Server = localrepo
		Revision = HEAD
        Directory = openssh
</File>

<File makekey>
        Server = localrepo
		Revision = HEAD
        Directory = openssh
</File>

<Package>
	<sshd>
	
		Version  = 5.8p1
		Revision = 2
		License = OPENSSH
		
		Help <<EOF
			OpenSSH sshd daemon.
			Homepage: http://www.openssh.org
			Requires libcrpto.lrp libz.lrp
			LEAF package by __PACKAGER__, __BUILDDATE__

			If sshd doesn't start up, you probably haven't generated a hostkey. Load 
			sshkey.lrp and see the output of "help sshkey" for details on how to generate the keys.
 
			EOF
	
		<Permissions>
			Files = 644
			Directories = 755
		</Permissions>
		
		<Owner>
			Files = root:root
			Directories = root:root
		</Owner>

		<DependsOn>
			Package = libcrpto
			Package = libz
		</DependsOn>
	
		<Contents>
			<File>
				Filename 	= etc/ssh/sshd_config 
				Source	   	= etc/ssh/sshd_config 
				Description = sshd config file
				Type		= conf
				Type		= binary
			</File>
			
			<File>
				Filename 	= etc/init.d/sshd
				Source	   	= etc/init.d/sshd
				Description = sshd daemon init file 
				Type		= conf
				Type		= local
				Type		= binary
				Permissions = 755
			</File>
			
			<File>		
				Filename 	= etc/ssh
				Type		= local
			</File>			
			
			<File>		
				Source	   	= usr/sbin/sshd
				Filename 	= usr/sbin/sshd
				Type		= binary
				Permissions = 755
			</File>
			<File>		
				Source	   	= etc/ssh/moduli
				Filename 	= etc/ssh/moduli
				Type		= binary
			</File>
			
			<File>		
				Source	    = usr/bin/scp
				Filename 	= usr/bin/scp
				Type		= binary
				Permissions = 755
			</File>		
			
		</Contents>
	</sshd>

	<ssh>
		Version  = 5.8p1
		Revision = 2
		License = OPENSSH

		Help <<EOF
			OpenSSH ssh client.
			Requires libcrpto.lrp libz.lrp
			Homepage: http://www.openssh.org
			LEAF package by __PACKAGER__, __BUILDDATE__
			EOF
	
		<Permissions>
			Files = 644
			Directories = 755
		</Permissions>
		
		<Owner>
				Files = root:root
				Directories = root:root
		</Owner>

		<DependsOn>
			Package = libcrpto
			Package = libz
		</DependsOn>
	
		<Contents>
			<File>
				Filename 	= etc/ssh/ssh_config 
				Source	   	= etc/ssh/ssh_config 
				Description = ssh config file
				Type		= conf
				Type		= local
				Type		= binary
			</File>
																
			<File>		
				Source	   	= usr/bin/ssh
				Filename 	= usr/bin/ssh
				Type		= binary
				Permissions	= 755
			</File>			
		</Contents>
	</ssh>

	<sftp>
		Version  = 5.8p1
		Revision = 2
		License = OPENSSH
		
		Help <<EOF
			OpenSSH sftp client & server programs.
			Requires libcrpto.lrp libz.lrp
			Homepage: http://www.openssh.org
			LEAF package by __PACKAGER__, __BUILDDATE__
			EOF
	
		<Permissions>
			Files = 644
			Directories = 755
		</Permissions>
		
		<Owner>
				Files = root:root
				Directories = root:root
		</Owner>

		<DependsOn>
			Package = libcrpto
			Package = libz
		</DependsOn>
	
		<Contents>
			<File>
				Filename 	= usr/bin/sftp
				Source	   	= usr/bin/sftp
				Type		= binary
				Permissions	= 755				
			</File>
			
																
			<File>		
				Filename 	= usr/libexec/sftp-server
				Source	   	= usr/libexec/sftp-server
				Type		= binary
				Permissions	= 755
			</File>			
		</Contents>
	</sftp>	
	
	<sshkey>
		Version  = 5.8p1
		Revision = 2
		License = OPENSSH
		
		Help <<EOF
			OpenSSH ssh-keygen program
			Requires libcrpto.lrp libz.lrp
			Homepage: http://www.openssh.org
			LEAF package by __PACKAGER__, __BUILDDATE__
			
			To generate sshd hostkeys run the "makekey" script.

			When you have done this backup to save the hostkey to disk. Once you
			have generated a hostkey you don't need to load this package, and you may
			remove it from your bootdisk to save some diskspace.
			EOF
	
		<Permissions>
			Files = 644
			Directories = 755
		</Permissions>
		
		<Owner>
				Files = root:root
				Directories = root:root
		</Owner>

		<DependsOn>
			Package = libcrpto
			Package = libz
		</DependsOn>
	
		<Contents>
			<File>
				Filename 	= usr/bin/ssh-keygen
				Source	   	= usr/bin/ssh-keygen
				Type		= binary
				Permissions	= 755				
			</File>
			
																
			<File>		
				Filename 	= usr/bin/makekey
				Source		= usr/bin/makekey
				Type		= binary
				Permissions	= 755
			</File>			
		</Contents>
	</sshkey>		
</Package>
