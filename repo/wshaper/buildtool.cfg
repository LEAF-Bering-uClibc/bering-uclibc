<File buildtool.mk>
  Server = localrepo
  Revision = HEAD
  Directory = wshaper
</File>

<File wshaper.cbq>
  Server = localrepo
  Revision = HEAD
  Directory = wshaper
</File>

<File wshaper.htb>
  Server = localrepo
  Revision = HEAD
  Directory = wshaper
</File>

<Package>
	<wshaper>
		    Version = 1.1a-4
		    Revision = 4
	
		    Help << EOF
		    The Wonder Shaper
		    Homepage: http://lartc.org/wondershaper/
		    LEAF package by __PACKAGER__, __BUILDDATE__
		    
		    How to set up the wondershaper on a LEAF system
		    
		    Outline:
		    
		    STEP 1 Gather data
		    STEP 2 Pre-test
		    STEP 3 Enable the wondershaper
		    STEP 4 Post-test
		    STEP 5 Controling the wondershaper
		    STEP 6 Permanent setup
		    STEP 7 Monitoring the wondershaper
		    
		    STEP 1 Gather data
		    
		    Determine your upstream address, perhaps by running ip route
		    
		    firewall# ip route
		    192.168.1.0/24 dev eth1  proto kernel  scope link  src 192.168.1.254
		    1.2.3.0/24 dev eth0  proto kernel  scope link  src 1.2.3.4
		    
		    in this example, your upstream address is 1.2.3.4 
		    
		    Figure out your REAL download and upload speeds.
		    If you have an honest ISP, you can use the specified values that
		    you ordered with the circuit.
		    Otherwise, do some uploads and downloads to measure your speeds.
		    Note you need to measure this in KILOBITS per SECOND not megabytes
		    or whatever.
		    
		    STEP 2 Pre-test
		    
		    Start a large full line rate download.
		    
		    At the same time, ping your upstream serial port, in this 
		    example 1.2.3.4.  Sample results are listed below:
		    
		    20 packets transmitted, 20 received, 0% packet loss, time 19022ms
		    rtt min/avg/max/mdev = 73.251/249.207/372.279/80.579 ms
		    
		    The point of the wondershaper is to reduce the average and peak rtt
		    
		    Try to ssh or telnet to something out on the net.  Notice the high
		    latency as seen by "jerkiness" when typing and scrolling, etc.
		    
		    Write down your test results or cut and paste them somewhere so that
		    you can compare your Post-test with your Pre-test results.
		    
		    STEP 3 Enable the wondershaper
		    
		    In this example, your ISP connects to eth0, and you've got
		    a downlink speed of 500 K and an uplink speed of 100K.
		    
		    As root, execute the following command:
		    
		    wondershaper eth0 500 100
		    
		    STEP 4 Post-test
		    
		    Do the same test you did in the pre-test.
		    Here are some sample results:
		    
		    20 packets transmitted, 20 received, 0% packet loss, time 19019ms
		    rtt min/avg/max/mdev = 24.773/84.195/201.361/36.426 ms
		    
		    Now ssh or telnet to something out on the net and see if there is less
		    latency.
		    
		    Now, compare your testing results.  In this test example:
		    The best case ping time dropped from 73 ms to 24 ms, a 67% improvement
		    The average ping time dropped from 249 ms to 84 ms, a 66% improvement
		    The worst case ping time dropped from 372 ms to 201 ms a 45% improvement
		    
		    So, on this firewall, the measured latencies while under load generally 
		    dropped by "about" 50%.
		    
		    STEP 5 Controlling the wondershaper
		    
		    Assuming your ISP is connected to eth0, you can examine your traffic
		    shaping stats by running "wondershaper eth0" as root.
		    
		    Assuming your ISP is connected to eth0, you can remove all traffic
		    shaping from eth0 by running "wondershaper clear eth0" as root.
		    Note that the wondershaper doesn't care what the first word is,
		    you could just as well enter "wondershaper delete eth0" or whatever
		    word works for you.
		    
		    You should probably do several cycles of enabling, testing, and 
		    deleting, using various combinations of uplink and downlink speeds
		    to determine the configuration with the best overall performance.
		    
		    A good strategy to use is to configure the wondershaper to relatively 
		    low values and work your way upwards until the latency
		    suffers too much, then drop back to the best "reasonable" value.
		    
		    STEP 6 Permanent setup
		    
		    It is relatively easy to permanently install the wondershaper on your
		    system.
		    
		    In this example, we will assume your ISP is connected to eth0, and you 
		    get your best performance with a downlink speed of 500K and an upload
		    speed of 100K.
		    
		    Before installing the wondershaper, your file /etc/network/interfaces
		    probably looks something like this:
		    
		    auto eth0
		    iface eth0 inet dhcp
		    
		    After logging in as root and editing that file to install the 
		    wondershaper, that same paragraph will look like this:
		    
		    auto eth0
		    iface eth0 inet dhcp
		        up /sbin/wondershaper eth0 500 100
		        down /sbin/wondershaper remove eth0
		    
		    After your final edit, you may wish to ifdown eth0 and then ifup eth0.
		    
		    Most people think its a good idea once you think you are done, to 
		    reboot and make sure everything boots up "OK".  It's better to find out
		    something won't boot up under controlled conditions when you expect it, 
		    rather than at 2am months after you made the change.  However, there is 
		    no "need" to reboot the computer merely to make the wondershaper work.
		    
		    If you ever decide to remove the wondershaper package from your LEAF
		    system, remember that you will need to delete the lines you added to 
		    the interfaces file, either manually or by using the backup file you made.
		    
		    STEP 7 Monitoring the wondershaper
		    
		    Assuming your ISP is connected to eth0, you can examine your traffic
		    shaping stats by running "wondershaper eth0" as root.
		    EOF
		    
		    <Permissions>
			    Files = 644
			    Directories = 755
		    </Permissions>
		    
		    <Owner>
			    Files = root:root
			    Directories = root:root
		    </Owner>
		    
		    <Contents>
			    <File>
				    Source = sbin/wshaper.cbq
				    Filename = sbin/wondershaper
				    Description = wondershaper configuration
				    Type = conf
				    Type = local
				    Type = binary
				    Permissions = 755
			    </File>
		    </Contents>
	</wshaper>
</Package>
