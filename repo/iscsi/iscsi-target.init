#!/bin/sh
#
# chkconfig: - 39 35
# description: Starts and stops the iSCSI target
# debianized start-stop script
RCDLINKS="2,S20 3,S20 4,S20 5,S20 0,K20 1,K20 6,K20"

PID_FILE=/var/run/iscsi_trgt.pid
CONFIG_FILE=/etc/ietd.conf
DAEMON=/usr/sbin/ietd

PATH=/sbin:/bin:/usr/sbin:/usr/bin

# Don't touch this "memsize thingy" unless you are blessed
# with knowledge about it.
MEM_SIZE=1048576

configure_memsize()
{
    if [ -e /proc/sys/net/core/wmem_max ]; then
        echo ${MEM_SIZE} > /proc/sys/net/core/wmem_max
    fi

    if [ -e /proc/sys/net/core/rmem_max ]; then
        echo ${MEM_SIZE} > /proc/sys/net/core/rmem_max
    fi

    if [ -e /proc/sys/net/core/wmem_default ]; then
        echo ${MEM_SIZE} > /proc/sys/net/core/wmem_default
    fi

    if [ -e /proc/sys/net/core/rmem_default ]; then
        echo ${MEM_SIZE} > /proc/sys/net/core/rmem_default
    fi

    if [ -e /proc/sys/net/ipv4/tcp_mem ]; then
        echo "${MEM_SIZE} ${MEM_SIZE} ${MEM_SIZE}" > /proc/sys/net/ipv4/tcp_mem
    fi

    if [ -e  /proc/sys/net/ipv4/tcp_rmem ]; then
        echo "${MEM_SIZE} ${MEM_SIZE} ${MEM_SIZE}" > /proc/sys/net/ipv4/tcp_rmem
    fi

    if [ -e /proc/sys/net/ipv4/tcp_wmem ]; then
        echo "${MEM_SIZE} ${MEM_SIZE} ${MEM_SIZE}" > /proc/sys/net/ipv4/tcp_wmem
    fi
}

RETVAL=0

ietd_start()
{
	echo -n "Starting iSCSI enterprise target service: "
	configure_memsize
	start-stop-daemon --start --exec $DAEMON --quiet
	RETVAL=$?
	if [ $RETVAL == "0" ]; then
	    echo "succeeded."
	else
	    echo "failed."
	fi	    
}
	
ietd_stop()
{	echo -n "Stopping iSCSI enterprise target service: "
	start-stop-daemon --stop --quiet --exec $DAEMON --pidfile $PID_FILE
	RETVAL=$?
	if [ $RETVAL == "0" ]; then
	    echo "succeeded."
	else
	    echo "failed."
	fi
	# ugly, but pid file is not removed ba ietd
	rm -f $PID_FILE
	echo -n "Removing iSCSI enterprise target devices: "
	# ugly, but ietadm does not allways provides correct exit values
	RETURN=`ietadm --mode del all 2>&1`
	RETVAL=$?
	if [ $RETVAL == "0" ]; then
	    echo "succeeded."
	else
	    echo "failed with reason :$RETURN"
	    exit 1
	fi
}

case "$1" in
  start)
        ietd_start
        ;;
  stop)
        ietd_stop
        ;;
  restart)
        ietd_stop
	sleep 1
	ietd_start
        ;;
  status)
	PID=`pidof ietd`
	if [ $PID ]; then
		echo "iSCSI enterprise target is running at pid $PID"
	else
		echo "no iSCSI enterprise target found!"
		exit 1
	fi	
        ;;
  *)
        echo $"Usage: $0 {start|stop|restart|status}"
        exit 1
esac

exit 0
