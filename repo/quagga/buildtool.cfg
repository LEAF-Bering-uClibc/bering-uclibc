<File buildtool.mk>
  Server = localrepo
  Revision = HEAD
  Directory = quagga
</File>

<File quagga-0.99.20.tar.gz>
  Server = localrepo
  Revision = HEAD
  envname = QUAGGA_SOURCE
  Directory = quagga
</File>

<File bgpd.conf>
 Server = localrepo
 Revision = HEAD
 Directory = quagga
</File>

<File bgpd.init>
 Server = localrepo
 Revision = HEAD
 Directory = quagga
</File>

<File isisd.conf>
 Server = localrepo
 Revision = HEAD
 Directory = quagga
</File>

<File isisd.init>
 Server = localrepo
 Revision = HEAD
 Directory = quagga
</File>

<File ospfd.conf>
 Server = localrepo
 Revision = HEAD
 Directory = quagga
</File>

<File ospfd.init>
 Server = localrepo
 Revision = HEAD
 Directory = quagga
</File>

<File ospf6d.conf>
 Server = localrepo
 Revision = HEAD
 Directory = quagga
</File>

<File ospf6d.init>
 Server = localrepo
 Revision = HEAD
 Directory = quagga
</File>

<File ripd.conf>
 Server = localrepo
 Revision = HEAD
 Directory = quagga
</File>

<File ripd.init>
 Server = localrepo
 Revision = HEAD
 Directory = quagga
</File>

<File ripngd.conf>
 Server = localrepo
 Revision = HEAD
 Directory = quagga
</File>

<File ripngd.init>
 Server = localrepo
 Revision = HEAD
 Directory = quagga
</File>

<File zebra.conf>
 Server = localrepo
 Revision = HEAD
 Directory = quagga
</File>

<File zebra.init>
 Server = localrepo
 Revision = HEAD
 Directory = quagga
</File>

<Package>
	<bgpd>
		Version = 0.99.20
		Revision = 1
		License = GPL-2.0

		Help <<EOF
		Quagga (Zebra) routing daemons.
		Homepage: http://www.quagga.net
		Requires: libm.lrp zebra.lrp 
		LEAF package by __PACKAGER__, __BUILDDATE__

		From the Zebra web site:

		GNU Zebra is free software (distributed under GNU Generic Public License) that
		manages TCP/IP based routing protocols. It supports BGP-4 protocol as described
		in RFC1771 (A Border Gateway Protocol 4) as well as RIPv1, RIPv2 and OSPFv2.
		Unlike traditional, Gated based, monolithic architectures and even the
		so-called "new modular architectures" that remove the burden of processing
		routing functions from the cpu and utilize special ASIC chips instead, Zebra
		software offers true modularity.

		Zebra is unique in its design in that it has a process for each protocol.
		Zebra uses multithread technology under multithread supported UNIX kernels.
		However it can be run under non-multithread supported UNIX kernels. Thus Zebra
		provides flexibility and reliability. Each module can be upgraded independently
		of the others, allowing for quick upgrades as well as protection from the case
		of a failure in one protocol affecting the entire system.

		Zebra is intended to be used as a Route Server and a Route Reflector. Zebra is
		not a toolkit, it provides full routing power under a new architecture.
		EOF
		
		<Permissions>
			Files = 644
			Directories = 755
		</Permissions>

		<Owner>
			Files = root:root
			Directories = root:root
		</Owner>
		
		<Contents>
			<File>
				Filename	= etc/zebra/bgpd.conf
				Source		= etc/zebra/bgpd.conf
				Description	= bgpd configuration
				Type		= conf
				Type		= local
				Type		= binary
				Permissions = 600
			</File>

			<File>
				Filename	= etc/init.d/bgpd
				Source		= etc/init.d/bgpd
				Description	= bgpd daemon init file 
				Type		= binary
				Permissions	= 755
			</File>

			<File>
				Source		= usr/sbin/bgpd
				Filename	= usr/sbin/bgpd
				Type		= binary
				Permissions	= 755
			</File>
		</Contents>
	</bgpd>

	<isisd>
		Version = 0.99.20
		Revision = 1
		License = GPL-2.0

		Help <<EOF
		Quagga (Zebra) routing daemons.
		Homepage: http://www.quagga.net
		Requires: libm.lrp zebra.lrp
		LEAF package by __PACKAGER__, __BUILDDATE__

		From the Zebra web site:

		GNU Zebra is free software (distributed under GNU Generic Public License) that
		manages TCP/IP based routing protocols. It supports BGP-4 protocol as described
		in RFC1771 (A Border Gateway Protocol 4) as well as RIPv1, RIPv2 and OSPFv2.
		Unlike traditional, Gated based, monolithic architectures and even the
		so-called "new modular architectures" that remove the burden of processing
		routing functions from the cpu and utilize special ASIC chips instead, Zebra
		software offers true modularity.

		Zebra is unique in its design in that it has a process for each protocol.
		Zebra uses multithread technology under multithread supported UNIX kernels.
		However it can be run under non-multithread supported UNIX kernels. Thus Zebra
		provides flexibility and reliability. Each module can be upgraded independently
		of the others, allowing for quick upgrades as well as protection from the case
		of a failure in one protocol affecting the entire system.

		Zebra is intended to be used as a Route Server and a Route Reflector. Zebra is
		not a toolkit, it provides full routing power under a new architecture.
		EOF
		
		<Permissions>
			Files = 644
			Directories = 755
		</Permissions>

		<Owner>
			Files = root:root
			Directories = root:root
		</Owner>
		
		<Contents>
			<File>
				Filename	= etc/zebra/isisd.conf
				Source		= etc/zebra/isisd.conf
				Description	= bgpd configuration
				Type		= conf
				Type		= local
				Type		= binary
				Permissions	= 600
			</File>

			<File>
				Filename	= etc/init.d/isisd
				Source		= etc/init.d/isisd
				Description	= isisd daemon init file 
				Type		= binary
				Permissions	= 755
			</File>

			<File>
				Source		= usr/sbin/isisd
				Filename	= usr/sbin/isisd
				Type		= binary
				Permissions	= 755
			</File>
		</Contents>
	</isisd>

	<ospfd>
		Version = 0.99.20
		Revision = 1
		License = GPL-2.0

		Help <<EOF
		Quagga (Zebra) routing daemons.
		Homepage: http://www.quagga.net
		Requires: libm.lrp zebra.lrp
		LEAF package by __PACKAGER__, __BUILDDATE__

		From the Zebra web site:

		GNU Zebra is free software (distributed under GNU Generic Public License) that
		manages TCP/IP based routing protocols. It supports BGP-4 protocol as described
		in RFC1771 (A Border Gateway Protocol 4) as well as RIPv1, RIPv2 and OSPFv2.
		Unlike traditional, Gated based, monolithic architectures and even the
		so-called "new modular architectures" that remove the burden of processing
		routing functions from the cpu and utilize special ASIC chips instead, Zebra
		software offers true modularity.

		Zebra is unique in its design in that it has a process for each protocol.
		Zebra uses multithread technology under multithread supported UNIX kernels.
		However it can be run under non-multithread supported UNIX kernels. Thus Zebra
		provides flexibility and reliability. Each module can be upgraded independently
		of the others, allowing for quick upgrades as well as protection from the case
		of a failure in one protocol affecting the entire system.

		Zebra is intended to be used as a Route Server and a Route Reflector. Zebra is
		not a toolkit, it provides full routing power under a new architecture.
		EOF
		
		<Permissions>
			Files = 644
			Directories = 755
		</Permissions>

		<Owner>
			Files = root:root
			Directories = root:root
		</Owner>
		
		<Contents>
			<File>
				Filename	= etc/zebra/ospfd.conf
				Source		= etc/zebra/ospfd.conf
				Description	= ospfd configuration
				Type		= conf
				Type		= local
				Type		= binary
				Permissions = 600
			</File>

			<File>
				Filename	= etc/init.d/ospfd
				Source		= etc/init.d/ospfd
				Description	= ospfd daemon init file 
				Type		= binary
				Permissions	= 755
			</File>

			<File>
				Source		= usr/sbin/ospfd
				Filename	= usr/sbin/ospfd
				Type		= binary
				Permissions	= 755
			</File>

			<File>
				Source		= usr/lib/libospf.so.0.0.0
				Filename	= usr/lib/libospf.so.0.0.0
				Type		= binary
				Permissions	= 755
			</File>

			<File>
				Target		= usr/lib/libospf.so.0.0.0
				Filename	= usr/lib/libospf.so.0
				Type		= link
			</File>
		</Contents>
	</ospfd>

	<ospf6d>
		Version = 0.99.20
		Revision = 1
		License = GPL-2.0

		Help <<EOF
		Quagga (Zebra) routing daemons.
		Homepage: http://www.quagga.net
		Requires: libm.lrp zebra.lrp
		LEAF package by __PACKAGER__, __BUILDDATE__

		From the Zebra web site:

		GNU Zebra is free software (distributed under GNU Generic Public License) that
		manages TCP/IP based routing protocols. It supports BGP-4 protocol as described
		in RFC1771 (A Border Gateway Protocol 4) as well as RIPv1, RIPv2 and OSPFv2.
		Unlike traditional, Gated based, monolithic architectures and even the
		so-called "new modular architectures" that remove the burden of processing
		routing functions from the cpu and utilize special ASIC chips instead, Zebra
		software offers true modularity.

		Zebra is unique in its design in that it has a process for each protocol.
		Zebra uses multithread technology under multithread supported UNIX kernels.
		However it can be run under non-multithread supported UNIX kernels. Thus Zebra
		provides flexibility and reliability. Each module can be upgraded independently
		of the others, allowing for quick upgrades as well as protection from the case
		of a failure in one protocol affecting the entire system.

		Zebra is intended to be used as a Route Server and a Route Reflector. Zebra is
		not a toolkit, it provides full routing power under a new architecture.
		EOF

		<Permissions>
			Files = 644
			Directories = 755
		</Permissions>

		<Owner>
			Files = root:root
			Directories = root:root
		</Owner>

		<Contents>
			<File>
				Filename	= etc/zebra/ospf6d.conf
				Source		= etc/zebra/ospf6d.conf
				Description	= ospf6d configuration
				Type		= conf
				Type		= local
				Type		= binary
				Permissions = 600
			</File>

			<File>
				Filename	= etc/init.d/ospf6d
				Source		= etc/init.d/ospf6d
				Description	= ospf6d daemon init file 
				Type		= binary
				Permissions	= 755
			</File>

			<File>
				Source		= usr/sbin/ospf6d
				Filename	= usr/sbin/ospf6d
				Type		= binary
				Permissions	= 755
			</File>
		</Contents>
	</ospf6d>

	<ripd>
		Version = 0.99.20
		Revision = 1
		License = GPL-2.0

		Help <<EOF
		Quagga (Zebra) routing daemons.
		Homepage: http://www.quagga.net
		Requires: libm.lrp zebra.lrp
		LEAF package by __PACKAGER__, __BUILDDATE__

		From the Zebra web site:

		GNU Zebra is free software (distributed under GNU Generic Public License) that
		manages TCP/IP based routing protocols. It supports BGP-4 protocol as described
		in RFC1771 (A Border Gateway Protocol 4) as well as RIPv1, RIPv2 and OSPFv2.
		Unlike traditional, Gated based, monolithic architectures and even the
		so-called "new modular architectures" that remove the burden of processing
		routing functions from the cpu and utilize special ASIC chips instead, Zebra
		software offers true modularity.

		Zebra is unique in its design in that it has a process for each protocol.
		Zebra uses multithread technology under multithread supported UNIX kernels.
		However it can be run under non-multithread supported UNIX kernels. Thus Zebra
		provides flexibility and reliability. Each module can be upgraded independently
		of the others, allowing for quick upgrades as well as protection from the case
		of a failure in one protocol affecting the entire system.

		Zebra is intended to be used as a Route Server and a Route Reflector. Zebra is
		not a toolkit, it provides full routing power under a new architecture.
		EOF
		
		<Permissions>
			Files = 644
			Directories = 755
		</Permissions>

		<Owner>
			Files = root:root
			Directories = root:root
		</Owner>
		
		<Contents>
			<File>
				Filename	= etc/zebra/ripd.conf
				Source		= etc/zebra/ripd.conf
				Description	= ripd configuration
				Type		= conf
				Type		= local
				Type		= binary
				Permissions = 600
			</File>

			<File>
				Filename	= etc/init.d/ripd
				Source		= etc/init.d/ripd
				Description	= ripd daemon init file 
				Type		= binary
				Permissions	= 755
			</File>

			<File>
				Source		= usr/sbin/ripd
				Filename	= usr/sbin/ripd
				Type		= binary
				Permissions	= 755
			</File>
		</Contents>
	</ripd>

	<ripngd>
		Version = 0.99.20
		Revision = 1
		License = GPL-2.0

		Help <<EOF
		Quagga (Zebra) routing daemons.
		Homepage: http://www.quagga.net
		Requires: libm.lrp zebra.lrp
		LEAF package by __PACKAGER__, __BUILDDATE__

		From the Zebra web site:

		GNU Zebra is free software (distributed under GNU Generic Public License) that
		manages TCP/IP based routing protocols. It supports BGP-4 protocol as described
		in RFC1771 (A Border Gateway Protocol 4) as well as RIPv1, RIPv2 and OSPFv2.
		Unlike traditional, Gated based, monolithic architectures and even the
		so-called "new modular architectures" that remove the burden of processing
		routing functions from the cpu and utilize special ASIC chips instead, Zebra
		software offers true modularity.

		Zebra is unique in its design in that it has a process for each protocol.
		Zebra uses multithread technology under multithread supported UNIX kernels.
		However it can be run under non-multithread supported UNIX kernels. Thus Zebra
		provides flexibility and reliability. Each module can be upgraded independently
		of the others, allowing for quick upgrades as well as protection from the case
		of a failure in one protocol affecting the entire system.

		Zebra is intended to be used as a Route Server and a Route Reflector. Zebra is
		not a toolkit, it provides full routing power under a new architecture.
		EOF
		
		<Permissions>
			Files = 644
			Directories = 755
		</Permissions>

		<Owner>
			Files = root:root
			Directories = root:root
		</Owner>
		
		<Contents>
			<File>
				Filename	= etc/zebra/ripngd.conf
				Source		= etc/zebra/ripngd.conf
				Description	= ripngd configuration
				Type		= conf
				Type		= local
				Type		= binary
				Permissions = 600
			</File>

			<File>
				Filename	= etc/init.d/ripngd
				Source		= etc/init.d/ripngd
				Description	= ripngd daemon init file 
				Type		= binary
				Permissions	= 755
			</File>

			<File>
				Source		= usr/sbin/ripngd
				Filename	= usr/sbin/ripngd
				Type		= binary
				Permissions	= 755
			</File>
		</Contents>
	</ripngd>
	<zebra>
		Version = 0.99.20
		Revision = 1
		License = GPL-2.0

		Help <<EOF
		Quagga (Zebra) routing daemons.
		Homepage: http://www.quagga.net
		Requires: libm.lrp
		LEAF package by __PACKAGER__, __BUILDDATE__

		From the Zebra web site:

		GNU Zebra is free software (distributed under GNU Generic Public License) that
		manages TCP/IP based routing protocols. It supports BGP-4 protocol as described
		in RFC1771 (A Border Gateway Protocol 4) as well as RIPv1, RIPv2 and OSPFv2.
		Unlike traditional, Gated based, monolithic architectures and even the
		so-called "new modular architectures" that remove the burden of processing
		routing functions from the cpu and utilize special ASIC chips instead, Zebra
		software offers true modularity.

		Zebra is unique in its design in that it has a process for each protocol.
		Zebra uses multithread technology under multithread supported UNIX kernels.
		However it can be run under non-multithread supported UNIX kernels. Thus Zebra
		provides flexibility and reliability. Each module can be upgraded independently
		of the others, allowing for quick upgrades as well as protection from the case
		of a failure in one protocol affecting the entire system.

		Zebra is intended to be used as a Route Server and a Route Reflector. Zebra is
		not a toolkit, it provides full routing power under a new architecture.
		EOF
		
		<Permissions>
			Files = 644
			Directories = 755
		</Permissions>

		<Owner>
			Files = root:root
			Directories = root:root
		</Owner>
		
		<Contents>
			<File>
				Filename	= etc/zebra/zebra.conf
				Source		= etc/zebra/zebra.conf
				Description	= zebra configuration
				Type		= conf
				Type		= local
				Type		= binary
				Permissions = 600
			</File>

			<File>
				Filename	= etc/init.d/zebra
				Source		= etc/init.d/zebra
				Description	= zebra daemon init file 
				Type		= binary
				Permissions	= 755
			</File>

			<File>
				Source		= usr/sbin/zebra
				Filename	= usr/sbin/zebra
				Type		= binary
				Permissions	= 755
			</File>

			<File>
				Source		= usr/lib/libzebra.so.0.0.0
				Filename	= usr/lib/libzebra.so.0.0.0
				Type		= binary
				Permissions	= 755
			</File>

			<File>
				Target		= usr/lib/libzebra.so.0.0.0
				Filename	= usr/lib/libzebra.so.0
				Type		= link
			</File>
		</Contents>
	</zebra>
</Package>
