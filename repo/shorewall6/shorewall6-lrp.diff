diff -urN shorewall6-4.4.20.1.orig/configfiles/shorewall6.conf shorewall6-4.4.20.1/configfiles/shorewall6.conf
--- shorewall6-4.4.20.1.orig/configfiles/shorewall6.conf	2011-06-07 00:48:26.000000000 +0200
+++ shorewall6-4.4.20.1/configfiles/shorewall6.conf	2011-06-07 17:19:26.587111600 +0200
@@ -10,7 +10,7 @@
 #		       S T A R T U P   E N A B L E D
 ###############################################################################
 
-STARTUP_ENABLED=No
+STARTUP_ENABLED=Yes
 
 ###############################################################################
 #		              V E R B O S I T Y
@@ -72,7 +72,7 @@
 
 SHOREWALL_SHELL=/bin/sh
 
-SUBSYSLOCK=/var/lock/subsys/shorewall
+SUBSYSLOCK=/var/run/shorewall
 
 TC=
 
@@ -135,7 +135,7 @@
 
 IMPLICIT_CONTINUE=No
 
-IP_FORWARDING=Off
+IP_FORWARDING=On
 
 KEEP_RT_TABLES=Yes
 
diff -urN shorewall6-4.4.20.1.orig/init.debian.sh shorewall6-4.4.20.1/init.debian.sh
--- shorewall6-4.4.20.1.orig/init.debian.sh	2011-06-07 00:48:26.000000000 +0200
+++ shorewall6-4.4.20.1/init.debian.sh	2011-06-07 17:19:57.539092134 +0200
@@ -1,76 +1,16 @@
 #!/bin/sh
-### BEGIN INIT INFO
-# Provides:          shorewall6
-# Required-Start:    $network $remote_fs
-# Required-Stop:     $network $remote_fs
-# Default-Start:     S
-# Default-Stop:      0 6
-# Short-Description: Configure the firewall at boot time
-# Description:       Configure the firewall according to the rules specified in
-#                    /etc/shorewall6
-### END INIT INFO
-
-
-
+RCDLINKS="2,S19 3,S19 4,S19 5,S19 0,K91 6,K91"
 SRWL=/sbin/shorewall6
-SRWL_OPTS="-tvv"
 WAIT_FOR_IFUP=/usr/share/shorewall6/wait4ifup
-test -n ${INITLOG:=/var/log/shorewall6-init.log}
-
-test -x $SRWL || exit 0
-test -x $WAIT_FOR_IFUP || exit 0
-test -n "$INITLOG" || {
-	echo "INITLOG cannot be empty, please configure $0" ; 
-	exit 1;
-}
+VERBOSE=
 
-if [ "$(id -u)" != "0" ]
-then
-  echo "You must be root to start, stop or restart \"Shorewall6 firewall\"."
-  exit 1
-fi
-
-echo_notdone () {
-
-  if [ "$INITLOG" = "/dev/null" ] ; then 
-	  echo "not done."
-  else 
-	  echo "not done (check $INITLOG)."
-  fi
-
-  exit 1
-}
-
-not_configured () {
-	echo "#### WARNING ####"
-	echo "The firewall won't be started/stopped unless it is configured"
-	if [ "$1" != "stop" ]
-	then
-		echo ""
-		echo "Please read about Debian specific customization in"
-		echo "/usr/share/doc/shorewall6/README.Debian.gz."
-	fi
-	echo "#################"
-	exit 0
-}
-
-# check if shorewall is configured or not
+# parse the shorewall params file in order to use params in
+# /etc/default/shorewall
 if [ -f "/etc/default/shorewall6" ]
 then
-	. /etc/default/shorewall6
-	SRWL_OPTS="$SRWL_OPTS $OPTIONS"
-	if [ "$startup" != "1" ]
-	then
-		not_configured
-	fi
-else
-	not_configured
-fi
-
-[ "$INITLOG" = "/dev/null" ] && SHOREWALL_INIT_SCRIPT=1 || SHOREWALL_INIT_SCRIPT=0
-
-export SHOREWALL_INIT_SCRIPT
-
+        . /etc/default/shorewall6
+        fi
+        
 # wait for an unconfigured interface 
 wait_for_pppd () {
 	if [ "$wait_interface" != "" ]
@@ -86,32 +26,28 @@
 shorewall6_start () {
   echo -n "Starting \"Shorewall6 firewall\": "
   wait_for_pppd
-  $SRWL $SRWL_OPTS start >> $INITLOG 2>&1 && echo "done." || echo_notdone
+  $SRWL $OPTIONS start 2>&1 && echo "done." || echo_notdone
   return 0
 }
 
 # stop the firewall
 shorewall6_stop () {
   echo -n "Stopping \"Shorewall6 firewall\": "
-  if [ "$SAFESTOP" = 1 ]; then
-      $SRWL $SRWL_OPTS stop >> $INITLOG 2>&1 && echo "done." || echo_notdone
-  else
-      $SRWL $SRWL_OPTS clear >> $INITLOG 2>&1 && echo "done." || echo_notdone
-  fi
-  return 0
+      $SRWL $OPTIONS clear 2>&1 && echo "done." || echo_notdone
+    return 0
 }
 
 # restart the firewall
 shorewall6_restart () {
   echo -n "Restarting \"Shorewall6 firewall\": "
-  $SRWL $SRWL_OPTS restart >> $INITLOG 2>&1 && echo "done." || echo_notdone
+  $SRWL $OPTIONS restart 2>&1 && echo "done." || echo_notdone
   return 0
 }
 
 # refresh the firewall
 shorewall6_refresh () {
   echo -n "Refreshing \"Shorewall6 firewall\": "
-  $SRWL $SRWL_OPTS refresh >> $INITLOG 2>&1 && echo "done." || echo_notdone
+  $SRWL $OPTIONS refresh 2>&1 && echo "done." || echo_notdone
   return 0
 }
 
